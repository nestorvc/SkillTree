package interfaz;

import datos.Usuario;
import general.TipoUsuario;
import java.io.*;
import javax.swing.JFrame;
import javax.swing.UIManager;
import ui.UIAplicacion;

/**
 *
 * @author NÃ©stor Villalobos Corrales
 */
public class FRLogin extends javax.swing.JFrame {

    //ATRIBUTOS
    private UIAplicacion ui;
    
    //CONSTRUCTORES
    public FRLogin(UIAplicacion ui) {
        initComponents();
        this.ui = ui;       
        if (!ui.isUsuarioDefaultCreado()){
            ui.crearUsuario("0-0000-0000", "ADMIN", "ADMIN", "0", TipoUsuario.Administrador, true);
            ui.getRegUsuarios().getListaUsuarios().get(0).setContrasennia("12345");
            ui.getRegUsuarios().getListaUsuarios().get(0).setLogin("ADMIN");
            ui.setUsuarioDefaultCreado(true);
        }        
    }
    
    //GETS&SETS
    public UIAplicacion getUi() {
        return ui;
    }

    public void setUi(UIAplicacion ui) {
        this.ui = ui;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblMensaje = new javax.swing.JLabel();
        txtUsuario = new javax.swing.JTextField();
        btnEntrar = new javax.swing.JButton();
        txtContrasena = new javax.swing.JPasswordField();
        btnGuardar = new javax.swing.JButton();
        btnCargar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setPreferredSize(new java.awt.Dimension(350, 275));
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(350, 250));
        jPanel1.setLayout(null);

        jPanel2.setBackground(new java.awt.Color(0, 0, 0));

        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/skilltree_logo_grande.png"))); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(81, Short.MAX_VALUE)
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(14, Short.MAX_VALUE)
                .addComponent(lblLogo)
                .addContainerGap())
        );

        jPanel1.add(jPanel2);
        jPanel2.setBounds(0, 0, 350, 96);

        jPanel3.setBackground(new java.awt.Color(0, 0, 0));

        lblMensaje.setForeground(new java.awt.Color(255, 255, 255));
        lblMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, 330, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, 18, Short.MAX_VALUE)
        );

        jPanel1.add(jPanel3);
        jPanel3.setBounds(0, 232, 350, 18);

        txtUsuario.setForeground(new java.awt.Color(153, 153, 153));
        txtUsuario.setText("usuario");
        txtUsuario.setPreferredSize(new java.awt.Dimension(235, 30));
        txtUsuario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtUsuarioNombreMouseClicked(evt);
            }
        });
        jPanel1.add(txtUsuario);
        txtUsuario.setBounds(60, 110, 230, 31);

        btnEntrar.setText("Entrar");
        btnEntrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEntrarActionPerformed(evt);
            }
        });
        jPanel1.add(btnEntrar);
        btnEntrar.setBounds(60, 190, 63, 30);

        txtContrasena.setForeground(new java.awt.Color(102, 102, 102));
        txtContrasena.setText("jPasswordField1");
        jPanel1.add(txtContrasena);
        txtContrasena.setBounds(60, 150, 230, 31);

        btnGuardar.setText("Guardar");
        btnGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarActionPerformed(evt);
            }
        });
        jPanel1.add(btnGuardar);
        btnGuardar.setBounds(210, 190, 80, 30);

        btnCargar.setText("Cargar");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });
        jPanel1.add(btnCargar);
        btnCargar.setBounds(130, 190, 70, 30);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 350, 250));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtUsuarioNombreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtUsuarioNombreMouseClicked

    }//GEN-LAST:event_txtUsuarioNombreMouseClicked

    private void btnEntrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEntrarActionPerformed
        String login = txtUsuario.getText();
        char[] contrasena = txtContrasena.getPassword();
        Usuario usuario = ui.verificarLogin(login);
        
        if (!camposVacios()){
            if (usuario != null && ui.verificarContrasena(usuario, contrasena)){
                TipoUsuario tipo = usuario.getTipo();
                if (usuario.isActivo()){
                    if (tipo == TipoUsuario.Administrador){
                    FRAdmin_Usuarios ventana = new FRAdmin_Usuarios(this.ui, usuario);
                    ventana.show();
                    this.dispose();
                    }
                    else if (tipo == TipoUsuario.Estudiante){                    
                        FREstudiante ventana = new FREstudiante(this.ui, usuario);
                        ventana.show();
                        this.dispose();
                    }
                }
                else lblMensaje.setText("Este usuario ha sido inhabilitado.");
            }
            else lblMensaje.setText("Datos de acceso incorrectos.");
        }
        else lblMensaje.setText("Por favor complete todos los campos.");
        lblMensaje.setText("Hola");
    }//GEN-LAST:event_btnEntrarActionPerformed

    private void btnGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarActionPerformed
        guardarEnArchivo("datos.dat", this.ui);
        lblMensaje.setText("Datos guardados.");
    }//GEN-LAST:event_btnGuardarActionPerformed

    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        ui = (UIAplicacion) cargarArchivo("datos.dat");
        lblMensaje.setText("Datos cargados.");
    }//GEN-LAST:event_btnCargarActionPerformed

    //MAIN
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FRLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FRLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FRLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FRLogin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new FRLogin(new UIAplicacion()).setVisible(true);                
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnEntrar;
    private javax.swing.JButton btnGuardar;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JPasswordField txtContrasena;
    private javax.swing.JTextField txtUsuario;
    // End of variables declaration//GEN-END:variables

    public boolean camposVacios() {
        if (txtUsuario.getText().equals("")
            || txtContrasena.getPassword().equals("")) return true;
        else return false;
    }
    
    public static boolean guardarEnArchivo(String nombreArchivo, 
                                     Object objeto){
        /*
         * 1 - conectese
         * 2 - procese 
         * 3 - cierre
         */
        try{
            // conectese...
            FileOutputStream fos = new FileOutputStream(nombreArchivo);
            ObjectOutputStream flujoSalida = new ObjectOutputStream(fos);
            //procese
            flujoSalida.writeObject(objeto); 
            //cierre
            flujoSalida.close();
            
            return true;
        }
        catch (FileNotFoundException e){
            e.printStackTrace();
            return false;
        }
        catch (IOException e){
            e.printStackTrace();
            return false;
        }
    }
    
    public static Object cargarArchivo(String nombreArchivo){
    Object objeto=null;
    try{
            // conectese...
            FileInputStream fos = new FileInputStream(nombreArchivo);
            ObjectInputStream flujoEntrada = new ObjectInputStream(fos);
            //procese
            objeto = flujoEntrada.readObject();
            //cierre
            flujoEntrada.close();
        }
        catch (FileNotFoundException e){
            e.printStackTrace();
        }
        catch (ClassNotFoundException e){
            e.printStackTrace();
        }
        catch (IOException e){
            e.printStackTrace();
        }    
        return objeto;
    }
}