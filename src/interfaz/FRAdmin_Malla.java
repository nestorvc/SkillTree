package interfaz;

import datos.Curso;
import datos.Periodo;
import datos.Usuario;
import general.TipoPeriodo;
import java.awt.Color;
import java.io.Serializable;
import java.util.ArrayList;
import javax.swing.*;
import ui.UIAplicacion;

/**
 *
 * @author NÃ©stor Villalobos
 */
public class FRAdmin_Malla extends javax.swing.JFrame implements Serializable{

    //ATRIBUTOS
    private UIAplicacion ui;
    private Usuario administrador;
    //Flags
    private boolean crearActivado;
    private boolean administrarActivado;
    private boolean vistaActivado;
    private boolean mallaCreada;
    private boolean cursoBotonSeleccionado;
    //Interfaz
    private ArrayList<ArrayList> periodosPintados = new ArrayList<ArrayList>();
    private Curso cursoSeleccionado;
    private JToggleButton botonSeleccionado;

    //CONSTRUCTORES
    public FRAdmin_Malla(UIAplicacion ui, Usuario administrador) {
        initComponents();
        this.ui = ui;
        this.administrador = administrador;
        crearActivado = true;
        administrarActivado = false;
        vistaActivado = false;
        cursoBotonSeleccionado = false;
        cursoSeleccionado = null;
        interfaz();
    }

    //GETS&SETS
    public UIAplicacion getUi() {
        return ui;
    }

    public void setUi(UIAplicacion ui) {
        this.ui = ui;
    }
    
    public Usuario getAdministrador() {
        return administrador;
    }

    public void setAdministrador(Usuario administrador) {
        this.administrador = administrador;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngTipoUsuario = new javax.swing.ButtonGroup();
        btngCursos = new javax.swing.ButtonGroup();
        btngPeriodos = new javax.swing.ButtonGroup();
        pnlFondo = new javax.swing.JPanel();
        pnlTitular = new javax.swing.JPanel();
        lblLogo = new javax.swing.JLabel();
        lblMalla = new javax.swing.JLabel();
        lblUsuarios = new javax.swing.JLabel();
        lblCursos = new javax.swing.JLabel();
        lblUsername = new javax.swing.JLabel();
        pnlTab = new javax.swing.JPanel();
        lblTabCrear = new javax.swing.JLabel();
        lblTabAdministrar = new javax.swing.JLabel();
        lblTabVista = new javax.swing.JLabel();
        pnlCrearModificar = new javax.swing.JPanel();
        lblMensaje = new javax.swing.JLabel();
        pnlVistaDetalle = new javax.swing.JPanel();
        lblRequisitos = new javax.swing.JLabel();
        lblHoras = new javax.swing.JLabel();
        lblCreditos = new javax.swing.JLabel();
        lblContenido = new javax.swing.JLabel();
        txtContenido = new javax.swing.JTextField();
        lblCurso = new javax.swing.JLabel();
        txtCurso = new javax.swing.JTextField();
        cmbRequisitos = new javax.swing.JComboBox();
        txtCreditos = new javax.swing.JTextField();
        txtHoras = new javax.swing.JTextField();
        pnlCrearDetalle = new javax.swing.JPanel();
        lblPeriodos = new javax.swing.JLabel();
        spnPeriodos = new javax.swing.JSpinner();
        lblCarrera = new javax.swing.JLabel();
        txtCarrera = new javax.swing.JTextField();
        lblNombre = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        cmbPeriodos = new javax.swing.JComboBox();
        btnCrear = new javax.swing.JButton();
        pnlAdministrarDetalle = new javax.swing.JPanel();
        lblRequisitosAd = new javax.swing.JLabel();
        lblCursoAd = new javax.swing.JLabel();
        cmbCursos = new javax.swing.JComboBox();
        scpListaRequisitos = new javax.swing.JScrollPane();
        lstRequisitos = new javax.swing.JList();
        scpListaRequisitosAsignados = new javax.swing.JScrollPane();
        lstRequisitosAsignados = new javax.swing.JList();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnMenos = new javax.swing.JButton();
        btnMas = new javax.swing.JButton();
        scpPanelCursos = new javax.swing.JScrollPane();
        pnlCursos = new javax.swing.JPanel();
        pnlResumenMalla = new javax.swing.JPanel();
        lblMallaDatos = new javax.swing.JLabel();
        lblMallaResumen = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        pnlFondo.setBackground(new java.awt.Color(255, 255, 255));
        pnlFondo.setPreferredSize(new java.awt.Dimension(500, 600));
        pnlFondo.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlTitular.setBackground(new java.awt.Color(0, 0, 0));
        pnlTitular.setPreferredSize(new java.awt.Dimension(500, 40));

        lblLogo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/skilltree_logo.png"))); // NOI18N
        lblLogo.setToolTipText("");
        lblLogo.setPreferredSize(new java.awt.Dimension(100, 30));

        lblMalla.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblMalla.setForeground(new java.awt.Color(255, 255, 255));
        lblMalla.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMalla.setText("Malla");
        lblMalla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblMalla.setName("lblMenuMalla");
        lblMalla.setPreferredSize(new java.awt.Dimension(70, 30));
        lblMalla.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMenuMouseClicked(evt);
            }
        });

        lblUsuarios.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUsuarios.setForeground(new java.awt.Color(153, 153, 153));
        lblUsuarios.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblUsuarios.setText("Usuarios");
        lblUsuarios.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblUsuarios.setName("lblMenuUsuarios");
        lblUsuarios.setPreferredSize(new java.awt.Dimension(70, 30));
        lblUsuarios.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMenuMouseClicked(evt);
            }
        });

        lblCursos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCursos.setForeground(new java.awt.Color(153, 153, 153));
        lblCursos.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblCursos.setText("Cursos");
        lblCursos.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblCursos.setName("lblMenuCursos");
        lblCursos.setPreferredSize(new java.awt.Dimension(70, 30));
        lblCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblMenuMouseClicked(evt);
            }
        });

        lblUsername.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblUsername.setForeground(new java.awt.Color(153, 153, 153));
        lblUsername.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lblUsername.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tab.png"))); // NOI18N
        lblUsername.setText("Username");
        lblUsername.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblUsername.setPreferredSize(new java.awt.Dimension(70, 30));
        lblUsername.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblUsernameMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lblUsernameMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lblUsernameMouseExited(evt);
            }
        });

        javax.swing.GroupLayout pnlTitularLayout = new javax.swing.GroupLayout(pnlTitular);
        pnlTitular.setLayout(pnlTitularLayout);
        pnlTitularLayout.setHorizontalGroup(
            pnlTitularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitularLayout.createSequentialGroup()
                .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblCursos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMalla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 74, Short.MAX_VALUE)
                .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlTitularLayout.setVerticalGroup(
            pnlTitularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblCursos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(lblLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(pnlTitularLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(lblMalla, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(lblUsername, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pnlFondo.add(pnlTitular, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        pnlTab.setBackground(new java.awt.Color(235, 235, 235));
        pnlTab.setPreferredSize(new java.awt.Dimension(500, 40));

        lblTabCrear.setBackground(new java.awt.Color(255, 255, 255));
        lblTabCrear.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTabCrear.setForeground(new java.awt.Color(51, 51, 51));
        lblTabCrear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTabCrear.setText("Crear");
        lblTabCrear.setAlignmentX(0.5F);
        lblTabCrear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblTabCrear.setMaximumSize(new java.awt.Dimension(100, 30));
        lblTabCrear.setMinimumSize(new java.awt.Dimension(100, 30));
        lblTabCrear.setName("lblTabCrear");
        lblTabCrear.setOpaque(true);
        lblTabCrear.setPreferredSize(new java.awt.Dimension(100, 40));
        lblTabCrear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTabMouseClicked(evt);
            }
        });

        lblTabAdministrar.setBackground(new java.awt.Color(235, 235, 235));
        lblTabAdministrar.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTabAdministrar.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTabAdministrar.setText("Administrar");
        lblTabAdministrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblTabAdministrar.setName("lblTabAdministrar");
        lblTabAdministrar.setOpaque(true);
        lblTabAdministrar.setPreferredSize(new java.awt.Dimension(100, 40));
        lblTabAdministrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTabMouseClicked(evt);
            }
        });

        lblTabVista.setBackground(new java.awt.Color(235, 235, 235));
        lblTabVista.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblTabVista.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTabVista.setText("Vista");
        lblTabVista.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lblTabVista.setName("lblTabVista");
        lblTabVista.setOpaque(true);
        lblTabVista.setPreferredSize(new java.awt.Dimension(100, 40));
        lblTabVista.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lblTabMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnlTabLayout = new javax.swing.GroupLayout(pnlTab);
        pnlTab.setLayout(pnlTabLayout);
        pnlTabLayout.setHorizontalGroup(
            pnlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabLayout.createSequentialGroup()
                .addComponent(lblTabCrear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTabAdministrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblTabVista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(190, 190, 190))
        );
        pnlTabLayout.setVerticalGroup(
            pnlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTabLayout.createSequentialGroup()
                .addGroup(pnlTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblTabAdministrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTabCrear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblTabVista, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pnlFondo.add(pnlTab, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, -1, -1));

        pnlCrearModificar.setBackground(new java.awt.Color(255, 255, 255));
        pnlCrearModificar.setLayout(null);

        lblMensaje.setForeground(new java.awt.Color(204, 0, 0));
        lblMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblMensaje.setPreferredSize(new java.awt.Dimension(480, 20));
        pnlCrearModificar.add(lblMensaje);
        lblMensaje.setBounds(10, 11, 480, 20);

        pnlVistaDetalle.setBackground(new java.awt.Color(255, 255, 255));
        pnlVistaDetalle.setLayout(null);

        lblRequisitos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRequisitos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRequisitos.setText("Requisitos:");
        pnlVistaDetalle.add(lblRequisitos);
        lblRequisitos.setBounds(10, 100, 90, 15);

        lblHoras.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblHoras.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblHoras.setText("Horas:");
        pnlVistaDetalle.add(lblHoras);
        lblHoras.setBounds(9, 140, 90, 15);

        lblCreditos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCreditos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCreditos.setText("CrÃ©ditos:");
        pnlVistaDetalle.add(lblCreditos);
        lblCreditos.setBounds(210, 140, 60, 15);

        lblContenido.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblContenido.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblContenido.setText("Contenido:");
        pnlVistaDetalle.add(lblContenido);
        lblContenido.setBounds(10, 60, 90, 15);

        txtContenido.setEditable(false);
        pnlVistaDetalle.add(txtContenido);
        txtContenido.setBounds(110, 50, 260, 30);

        lblCurso.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCurso.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCurso.setText("Curso:");
        pnlVistaDetalle.add(lblCurso);
        lblCurso.setBounds(10, 20, 90, 15);

        txtCurso.setEditable(false);
        pnlVistaDetalle.add(txtCurso);
        txtCurso.setBounds(110, 10, 260, 30);
        pnlVistaDetalle.add(cmbRequisitos);
        cmbRequisitos.setBounds(110, 90, 260, 30);

        txtCreditos.setEditable(false);
        pnlVistaDetalle.add(txtCreditos);
        txtCreditos.setBounds(290, 130, 80, 30);

        txtHoras.setEditable(false);
        pnlVistaDetalle.add(txtHoras);
        txtHoras.setBounds(110, 130, 80, 30);

        pnlCrearModificar.add(pnlVistaDetalle);
        pnlVistaDetalle.setBounds(340, 30, 120, 170);

        pnlCrearDetalle.setBackground(new java.awt.Color(255, 255, 255));
        pnlCrearDetalle.setLayout(null);

        lblPeriodos.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblPeriodos.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblPeriodos.setText("PerÃ­odos:");
        pnlCrearDetalle.add(lblPeriodos);
        lblPeriodos.setBounds(0, 100, 100, 15);

        spnPeriodos.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        pnlCrearDetalle.add(spnPeriodos);
        spnPeriodos.setBounds(110, 90, 40, 30);

        lblCarrera.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCarrera.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCarrera.setText("Carrera:");
        pnlCrearDetalle.add(lblCarrera);
        lblCarrera.setBounds(0, 60, 100, 15);
        pnlCrearDetalle.add(txtCarrera);
        txtCarrera.setBounds(110, 50, 260, 30);

        lblNombre.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblNombre.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNombre.setText("Nombre:");
        pnlCrearDetalle.add(lblNombre);
        lblNombre.setBounds(0, 20, 100, 15);
        pnlCrearDetalle.add(txtNombre);
        txtNombre.setBounds(110, 10, 260, 30);

        cmbPeriodos.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mes", "Bimestre", "Trimestre", "Cuatrimestre", "Semestre", "AÃ±o" }));
        pnlCrearDetalle.add(cmbPeriodos);
        cmbPeriodos.setBounds(160, 90, 210, 30);

        btnCrear.setBackground(new java.awt.Color(0, 0, 0));
        btnCrear.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnCrear.setText("Crear");
        btnCrear.setOpaque(false);
        btnCrear.setPreferredSize(new java.awt.Dimension(100, 40));
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearModificarActionPerformed(evt);
            }
        });
        pnlCrearDetalle.add(btnCrear);
        btnCrear.setBounds(160, 420, 100, 40);

        pnlCrearModificar.add(pnlCrearDetalle);
        pnlCrearDetalle.setBounds(40, 30, 120, 170);

        pnlAdministrarDetalle.setBackground(new java.awt.Color(255, 255, 255));
        pnlAdministrarDetalle.setLayout(null);

        lblRequisitosAd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblRequisitosAd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblRequisitosAd.setText("Requisitos:");
        pnlAdministrarDetalle.add(lblRequisitosAd);
        lblRequisitosAd.setBounds(0, 60, 100, 15);

        lblCursoAd.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        lblCursoAd.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblCursoAd.setText("Curso:");
        pnlAdministrarDetalle.add(lblCursoAd);
        lblCursoAd.setBounds(0, 20, 100, 15);

        cmbCursos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbCursosMouseClicked(evt);
            }
        });
        pnlAdministrarDetalle.add(cmbCursos);
        cmbCursos.setBounds(110, 10, 260, 30);

        scpListaRequisitos.setViewportView(lstRequisitos);

        pnlAdministrarDetalle.add(scpListaRequisitos);
        scpListaRequisitos.setBounds(110, 50, 100, 70);

        scpListaRequisitosAsignados.setViewportView(lstRequisitosAsignados);

        pnlAdministrarDetalle.add(scpListaRequisitosAsignados);
        scpListaRequisitosAsignados.setBounds(270, 50, 100, 70);

        btnAgregar.setText("Agregar");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });
        pnlAdministrarDetalle.add(btnAgregar);
        btnAgregar.setBounds(110, 130, 77, 30);

        btnEliminar.setText("Eliminar");
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        pnlAdministrarDetalle.add(btnEliminar);
        btnEliminar.setBounds(200, 130, 70, 30);

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlAdministrarDetalle.add(btnCancelar);
        btnCancelar.setBounds(290, 130, 80, 30);

        btnMenos.setText("<");
        btnMenos.setName("btnMenos");
        btnMenos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMasMenosMouseClicked(evt);
            }
        });
        pnlAdministrarDetalle.add(btnMenos);
        btnMenos.setBounds(220, 90, 40, 30);

        btnMas.setText(">");
        btnMas.setName("btnMas");
        btnMas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnMasMenosMouseClicked(evt);
            }
        });
        pnlAdministrarDetalle.add(btnMas);
        btnMas.setBounds(220, 50, 40, 30);

        pnlCrearModificar.add(pnlAdministrarDetalle);
        pnlAdministrarDetalle.setBounds(190, 30, 120, 170);

        pnlCursos.setBackground(new java.awt.Color(235, 235, 235));
        pnlCursos.setAutoscrolls(true);
        pnlCursos.setMaximumSize(new java.awt.Dimension(498, 308));
        pnlCursos.setMinimumSize(new java.awt.Dimension(498, 308));
        pnlCursos.setLayout(null);
        scpPanelCursos.setViewportView(pnlCursos);

        pnlCrearModificar.add(scpPanelCursos);
        scpPanelCursos.setBounds(0, 220, 500, 300);

        pnlResumenMalla.setBackground(new java.awt.Color(204, 204, 204));
        pnlResumenMalla.setPreferredSize(new java.awt.Dimension(500, 14));

        lblMallaDatos.setForeground(new java.awt.Color(102, 102, 102));
        lblMallaDatos.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        lblMallaResumen.setForeground(new java.awt.Color(102, 102, 102));
        lblMallaResumen.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);

        javax.swing.GroupLayout pnlResumenMallaLayout = new javax.swing.GroupLayout(pnlResumenMalla);
        pnlResumenMalla.setLayout(pnlResumenMallaLayout);
        pnlResumenMallaLayout.setHorizontalGroup(
            pnlResumenMallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlResumenMallaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblMallaDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(lblMallaResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pnlResumenMallaLayout.setVerticalGroup(
            pnlResumenMallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlResumenMallaLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(pnlResumenMallaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMallaDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMallaResumen, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlCrearModificar.add(pnlResumenMalla);
        pnlResumenMalla.setBounds(0, 206, 500, 14);

        pnlFondo.add(pnlCrearModificar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 500, 520));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlFondo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCrearModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearModificarActionPerformed
        String nombre = txtNombre.getText();
        String carrera = txtCarrera.getText();
        int cantidad = (Integer) spnPeriodos.getValue();
        TipoPeriodo tipo = null;
        if (cmbPeriodos.getSelectedItem().equals("Mes")) {
            tipo = TipoPeriodo.Mes;
        } else if (cmbPeriodos.getSelectedItem().equals("Bimestre")) {
            tipo = TipoPeriodo.Bimestre;
        } else if (cmbPeriodos.getSelectedItem().equals("Trimestre")) {
            tipo = TipoPeriodo.Trimestre;
        } else if (cmbPeriodos.getSelectedItem().equals("Cuatrimestre")) {
            tipo = TipoPeriodo.Cuatrimestre;
        } else if (cmbPeriodos.getSelectedItem().equals("Semestre")) {
            tipo = TipoPeriodo.Semestre;
        } else if (cmbPeriodos.getSelectedItem().equals("AÃ±o")) {
            tipo = TipoPeriodo.Annio;
        }

        if (!camposVacios()) {
            if (!mallaCreada) {
                ui.crearMalla(nombre, carrera, cantidad, tipo);
                lblMensaje.setText("Malla curricular creada.");
                lblMensaje.setForeground(Color.black);
                mallaCreada = true;
                ui.sincronizarMallaDefaultAEstudiantesCreados();
                repintar();
            } else {
                ui.modificarMalla(nombre, carrera);
                lblMensaje.setText("Malla curricular modificada.");
                lblMensaje.setForeground(Color.black);
                repintar();
            }
        } else {
            lblMensaje.setText("Por favor complete todos los campos.");
            lblMensaje.setForeground(Color.red);
        }
    }//GEN-LAST:event_btnCrearModificarActionPerformed

    private void lblTabMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblTabMouseClicked
        limpiar();
        lblMensaje.setText(null);
        crearActivado = false;
        administrarActivado = false;
        vistaActivado = false;

        JLabel tab = (JLabel) evt.getSource();
        if (tab.getName().equals("lblTabCrear")) {
            crearActivado = true;
        } else if (tab.getName().equals("lblTabAdministrar") && mallaCreada) {
            cargarLstRequisitos();
            administrarActivado = true;
            repintar();
        } else if (tab.getName().equals("lblTabVista") && mallaCreada) {
            vistaActivado = true;
            cargarResumenMalla();
            repintar();
        } else {
            lblMensaje.setText("Primero debe crear una malla curricular");
            lblMensaje.setForeground(Color.red);
            crearActivado = true;
        }
        interfaz();
    }//GEN-LAST:event_lblTabMouseClicked

    private void lblMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblMenuMouseClicked
        JLabel tab = (JLabel) evt.getSource();
        if (tab.getName().equals("lblMenuUsuarios")) {
            FRAdmin_Usuarios ventana = new FRAdmin_Usuarios(this.ui, this.administrador);
            ventana.show();
            this.dispose();
        } else if (tab.getName().equals("lblMenuCursos")) {
            FRAdmin_Cursos ventana = new FRAdmin_Cursos(this.ui, this.administrador);
            ventana.show();
            this.dispose();
        } else if (tab.getName().equals("lblMenuMalla")) {
        } 
    }//GEN-LAST:event_lblMenuMouseClicked

    private void btnMasMenosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnMasMenosMouseClicked
        JButton boton = (JButton) evt.getSource();
        DefaultListModel lstModel = (DefaultListModel) lstRequisitosAsignados.getModel();
        if (boton.getName().equals("btnMas")) {
            if (lstRequisitos.getSelectedValue() != null) {
                if (!lstModel.contains(lstRequisitos.getSelectedValue())) {
                    if (!lstRequisitos.getSelectedValue().equals(cmbCursos.getSelectedItem())) {
                        String curso = (String) lstRequisitos.getSelectedValue();
                        lstModel.addElement(curso);
                    } else {
                        lblMensaje.setText("El curso no puede agregarse a si mismo como requisito.");
                        lblMensaje.setForeground(Color.red);
                    }

                } else {
                    lblMensaje.setText("Un curso solo puede ser agregado 1 vez como requisito.");
                    lblMensaje.setForeground(Color.red);
                }
            }
        }
        if (boton.getName().equals("btnMenos")) {
            if (lstRequisitosAsignados.getSelectedValue() != null) {
                String curso = (String) lstRequisitosAsignados.getSelectedValue();
                lstModel.removeElement(curso);
            }
        }
    }//GEN-LAST:event_btnMasMenosMouseClicked

    private void btnCursoAgregadoSeleccionadoActionPerformed(java.awt.event.ActionEvent evt) {
        limpiar();
        cursoBotonSeleccionado = true;
        botonSeleccionado = (JToggleButton) evt.getSource();
        cursoSeleccionado = deStringACurso(botonSeleccionado.getToolTipText());
        
        pintarRequisitos(cursoSeleccionado);
        lblMensaje.setText("Se han seÃ±alado de color rojo los requisitos de este curso.");
        lblMensaje.setForeground(Color.black);
        
        seleccionarPeriodoDelCursoSeleccionado(ui.periodoDelCurso(cursoSeleccionado));
        if (administrarActivado) {
            //Visualiza en el cmbCursos y el lstRequisitosAgregagados los datos del curso seleccionado
            cmbCursos.setSelectedItem(botonSeleccionado.getToolTipText());
            cargarLstRequisitosCursoSeleccionado(cursoSeleccionado);
            interfaz();
        } else if (vistaActivado) {
            cargarVistaCursoSeleccionado(cursoSeleccionado);
            interfaz();
        }
    }

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        JButton boton = (JButton) evt.getSource();

        int periodoSeleccionado = periodoSeleccionado();
        String codigoNombreCur = (String) cmbCursos.getSelectedItem();
        Curso curso = deStringACurso(codigoNombreCur);
        ArrayList<Curso> requisitos = new ArrayList<Curso>();
        DefaultListModel model = (DefaultListModel) lstRequisitosAsignados.getModel();
        
        if (!model.isEmpty()) {
            for (int i = 0; i < model.size(); i++) {
                String codigoNombreReq = (String) model.get(i);
                Curso requisito = deStringACurso(codigoNombreReq);
                requisitos.add(requisito);                
            }
            limpiar();
        } else {
            requisitos = null;
        }
        

        if (boton.getText().equals("Agregar")) {
            if (ui.agregarCursoMalla(periodoSeleccionado, curso, requisitos)) {
                pintarCursoAgregado(periodoSeleccionado, curso);
            } else {
                lblMensaje.setText("El curso no puede ser agregado porque ya existe.Si desea modificarlo o eliminarlo haga clic sobre Ã©l.");
                lblMensaje.setForeground(Color.red);
            }
        } else if (boton.getText().equals("Modificar")) {
            ui.modificarCursoMalla(periodoSeleccionado, curso, requisitos);
            repintar();
            lblMensaje.setText("Curso modificado.");
            lblMensaje.setForeground(Color.black);
        }
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void cmbCursosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbCursosMouseClicked
        limpiar();
        interfaz();
    }//GEN-LAST:event_cmbCursosMouseClicked

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if (!esRequisito(cursoSeleccionado)) {
            ui.eliminarCursoMalla(cursoSeleccionado);

            //Poner el curso como Inactivo en RegistroCursos
            ui.modificarCurso(cursoSeleccionado.getCodigo(), cursoSeleccionado.getNombre(),
                    cursoSeleccionado.getHoras(), cursoSeleccionado.getCreditos(),
                    cursoSeleccionado.getContenidoTematico(), cursoSeleccionado.getIcono(), false);

            cursoBotonSeleccionado = false;
            botonSeleccionado.setSelected(false);
            //EliminaciÃ³n visual
            repintar();

            lblMensaje.setText("Curso eliminado.");
            lblMensaje.setForeground(Color.black);
        } else {
            lblMensaje.setText("Este curso es requisito de otro. No puede ser eliminado");
            lblMensaje.setForeground(Color.red);
        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        cursoBotonSeleccionado = false;
        botonSeleccionado.setSelected(false);
        limpiar();
        interfaz();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void lblUsernameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUsernameMouseClicked
        FRLogin ventana = new FRLogin(this.ui);
        ventana.show();
        this.dispose();
    }//GEN-LAST:event_lblUsernameMouseClicked

    private void lblUsernameMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUsernameMouseEntered

        lblUsername.setText("Salir");
        lblUsername.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tab_on.png")));
        lblUsername.setForeground(Color.white);
    }//GEN-LAST:event_lblUsernameMouseEntered

    private void lblUsernameMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lblUsernameMouseExited
        lblUsername.setText(administrador.getLogin());
        lblUsername.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/tab.png")));
        lblUsername.setForeground(new Color(153, 153, 153));
    }//GEN-LAST:event_lblUsernameMouseExited
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnMas;
    private javax.swing.JButton btnMenos;
    private javax.swing.ButtonGroup btngCursos;
    private javax.swing.ButtonGroup btngPeriodos;
    private javax.swing.ButtonGroup btngTipoUsuario;
    private javax.swing.JComboBox cmbCursos;
    private javax.swing.JComboBox cmbPeriodos;
    private javax.swing.JComboBox cmbRequisitos;
    private javax.swing.JLabel lblCarrera;
    private javax.swing.JLabel lblContenido;
    private javax.swing.JLabel lblCreditos;
    private javax.swing.JLabel lblCurso;
    private javax.swing.JLabel lblCursoAd;
    private javax.swing.JLabel lblCursos;
    private javax.swing.JLabel lblHoras;
    private javax.swing.JLabel lblLogo;
    private javax.swing.JLabel lblMalla;
    private javax.swing.JLabel lblMallaDatos;
    private javax.swing.JLabel lblMallaResumen;
    private javax.swing.JLabel lblMensaje;
    private javax.swing.JLabel lblNombre;
    private javax.swing.JLabel lblPeriodos;
    private javax.swing.JLabel lblRequisitos;
    private javax.swing.JLabel lblRequisitosAd;
    private javax.swing.JLabel lblTabAdministrar;
    private javax.swing.JLabel lblTabCrear;
    private javax.swing.JLabel lblTabVista;
    private javax.swing.JLabel lblUsername;
    private javax.swing.JLabel lblUsuarios;
    private javax.swing.JList lstRequisitos;
    private javax.swing.JList lstRequisitosAsignados;
    private javax.swing.JPanel pnlAdministrarDetalle;
    private javax.swing.JPanel pnlCrearDetalle;
    private javax.swing.JPanel pnlCrearModificar;
    private javax.swing.JPanel pnlCursos;
    private javax.swing.JPanel pnlFondo;
    private javax.swing.JPanel pnlResumenMalla;
    private javax.swing.JPanel pnlTab;
    private javax.swing.JPanel pnlTitular;
    private javax.swing.JPanel pnlVistaDetalle;
    private javax.swing.JScrollPane scpListaRequisitos;
    private javax.swing.JScrollPane scpListaRequisitosAsignados;
    private javax.swing.JScrollPane scpPanelCursos;
    private javax.swing.JSpinner spnPeriodos;
    private javax.swing.JTextField txtCarrera;
    private javax.swing.JTextField txtContenido;
    private javax.swing.JTextField txtCreditos;
    private javax.swing.JTextField txtCurso;
    private javax.swing.JTextField txtHoras;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables

    //OTROS MÃTODOS
    public void limpiar() {
        txtNombre.setText("");
        txtCarrera.setText("");
        txtHoras.setText("");
        txtCreditos.setText("");
        txtCurso.setText("");
        txtContenido.setText("");
        if (administrarActivado) {
            lblMensaje.setText("");
            DefaultListModel modelLstRequisitosAsignados = (DefaultListModel) lstRequisitosAsignados.getModel();
            modelLstRequisitosAsignados.removeAllElements();
        }
    }

    public boolean camposVacios() {
        if (crearActivado) {
            if (txtNombre.getText().equals("")
                    || txtCarrera.getText().equals("")
                    || spnPeriodos.getValue().equals(0)) {
                return true;
            } else {
                return false;
            }
        } else {
            return false;
        }
    }

    public void interfaz() {
        ///COLORES
        Color blanco = Color.white;
        Color gris = new Color(235, 235, 235);
        
        mallaCreada = ui.isMallaCreada();
        lblUsername.setText(administrador.getLogin());

        if (crearActivado) {
            //COLOR TABS
            lblTabCrear.setBackground(blanco);
            lblTabAdministrar.setBackground(gris);
            lblTabVista.setBackground(gris);

            pnlCrearDetalle.setBounds(40, 30, 420, 480); //NO-ESCONDIDO
            pnlAdministrarDetalle.setBounds(190, 30, 120, 170); //ESCONDIDO
            pnlVistaDetalle.setBounds(340, 30, 120, 170); //ESCONDIDO

            scpPanelCursos.setVisible(false);

            if (mallaCreada) {
                btnCrear.setText("Modificar");
                int cantidadPeriodos = ui.getMalla().getPeriodos().length;
                TipoPeriodo tipo = ui.getMalla().getPeriodos()[0].getTipo();
                String tipoPeriodo = tipo.toString();
                
                txtNombre.setText(ui.getMalla().getNombre());
                txtCarrera.setText(ui.getMalla().getCarrera());
                spnPeriodos.setEnabled(false);
                spnPeriodos.setValue(cantidadPeriodos);                
                cmbPeriodos.setEnabled(false);                
                cmbPeriodos.setSelectedItem(tipoPeriodo);
            } else {
                btnCrear.setText("Crear");
                spnPeriodos.setEnabled(true);
                cmbPeriodos.setEnabled(true);
            }
        }

        if (administrarActivado) {
            //COLOR TABS
            lblTabCrear.setBackground(gris);
            lblTabAdministrar.setBackground(blanco);
            lblTabVista.setBackground(gris);

            pnlCrearDetalle.setBounds(40, 30, 50, 170); //ESCONDIDO
            pnlAdministrarDetalle.setBounds(40, 30, 420, 170); //NO-ESCONDIDO
            pnlVistaDetalle.setBounds(340, 30, 120, 170); //ESCONDIDO

            scpPanelCursos.setVisible(true);

            if (cursoBotonSeleccionado) {
                btnAgregar.setText("Modificar");
                cmbCursos.setEnabled(false);
            } else {
                btnAgregar.setText("Agregar");
                cmbCursos.setEnabled(true);
            }
        }

        if (vistaActivado) {
            //COLOR TABS
            lblTabCrear.setBackground(gris);
            lblTabAdministrar.setBackground(gris);
            lblTabVista.setBackground(blanco);

            pnlCrearDetalle.setBounds(40, 30, 50, 170); //ESCONDIDO
            pnlAdministrarDetalle.setBounds(190, 30, 120, 170); //ESCONDIDO
            pnlVistaDetalle.setBounds(40, 30, 420, 170); //NO-ESCONDIDO

            scpPanelCursos.setVisible(true);
        }

        //VISIBILIDAD
        pnlCrearDetalle.setVisible(crearActivado);
        pnlAdministrarDetalle.setVisible(administrarActivado);
        pnlVistaDetalle.setVisible(vistaActivado);
        btnEliminar.setVisible(cursoBotonSeleccionado);
        btnCancelar.setVisible(cursoBotonSeleccionado);
        pnlResumenMalla.setVisible(vistaActivado);

        //USABILIDAD       
        lblTabAdministrar.setEnabled(mallaCreada);
        lblTabVista.setEnabled(mallaCreada);
    }

    public void pintarPeriodos() {
        Periodo[] periodos = ui.getMalla().getPeriodos();
        periodosPintados.clear();

        //Flag para colorear
        boolean cambioColor = false;

        //Coordenadas para pintar
        int xPnlInicial = 0;
        int yPnlInicial = 0;
        int xRbInicial = 10;
        int yRbInicial = 5;

        for (int i = 0; i < periodos.length; i++) {

            //Se crea el pnlPeriodoX
            JPanel pnlPeriodoX = new JPanel();
            pnlPeriodoX.setName("pnlPeriodo" + (i + 1));
            if (cambioColor) {
                pnlPeriodoX.setBackground(new java.awt.Color(235, 235, 235));
                cambioColor = false;
            } else {
                pnlPeriodoX.setBackground(new java.awt.Color(245, 245, 245));
                cambioColor = true;
            }
            pnlPeriodoX.setMaximumSize(new java.awt.Dimension(60, 1000));
            pnlPeriodoX.setLayout(null);

            //Se crea el rbPeriodoX
            JRadioButton rbPeriodoX = new JRadioButton();
            btngPeriodos.add(rbPeriodoX);
            rbPeriodoX.setText((i + 1) + "P");
            rbPeriodoX.setOpaque(false);
            pnlPeriodoX.add(rbPeriodoX);
            rbPeriodoX.setBounds(xRbInicial, yRbInicial, 40, 23);


            //Se aÃ±aden los objetos a un ArrayList por Panel para mayor orden de datos
            ArrayList<Object> proxPanelesPintados = new ArrayList<Object>();

            //Se crea de una vez un ArrayList que guardarÃ¡ los cursos que se vaya a pintar por Panel
            ArrayList<Object> proxCursosPintados = new ArrayList<Object>();
            //Por cada curso creado en este ArrayList, se guardarÃ¡ el botÃ³n que lo representa y su data tipo Curso
            ArrayList<JToggleButton> botonCursosPintado = new ArrayList<JToggleButton>();
            ArrayList<Curso> dataCursosPintado = new ArrayList<Curso>();
            proxCursosPintados.add(0, botonCursosPintado);
            proxCursosPintados.add(1, dataCursosPintado);

            //Al ArrayList de data general se le establece que siempre por periodo va a tener un Panel, un RadioButton, y un ArrayList de los Cursos agregados a este (que a su vez tiene la info del JToggleButton y el dato tipo Curso) 
            proxPanelesPintados.add(0, pnlPeriodoX);
            proxPanelesPintados.add(1, rbPeriodoX);
            proxPanelesPintados.add(2, proxCursosPintados);

            //Se aÃ±aden al ArrayList general de periodosPintados
            periodosPintados.add(i, proxPanelesPintados);

            //Se pinta el pnlPeriodoX al pnlCursos
            pnlCursos.add(pnlPeriodoX);
            pnlPeriodoX.setBounds(xPnlInicial, yPnlInicial, 60, 310);

            //Nuevas coordenadas para el siguiente pnlPeriodoX
            xPnlInicial = xPnlInicial + 60;
        }

        //Establece el rbPeriodo1 como seleccionado por default
        JRadioButton rbDefaultSelected = (JRadioButton) periodosPintados.get(0).get(1);
        rbDefaultSelected.setSelected(true);
    }

    public void pintarCursoAgregado(int periodo, Curso curso) {
        Icon icono = curso.getIcono();
        String toolTipText = curso.getCodigo() + " - " + curso.getNombre();

        JToggleButton tbtnCursoX = new JToggleButton();
        JPanel pnlPeriodoActual = (JPanel) periodosPintados.get(periodo).get(0);
        ArrayList<Object> cursosPintadosDelPeriodoActual = (ArrayList<Object>) periodosPintados.get(periodo).get(2);
        ArrayList<JToggleButton> botonesPeriodoActual = (ArrayList<JToggleButton>) cursosPintadosDelPeriodoActual.get(0);
        ArrayList<Curso> dataPeriodoActual = (ArrayList<Curso>) cursosPintadosDelPeriodoActual.get(1);

        if (botonesPeriodoActual.isEmpty()) {
            int indice = 0;
            int xTbtn = 5;
            int yTbtn = 30;
            btngCursos.add(tbtnCursoX);
            tbtnCursoX.setPreferredSize(new java.awt.Dimension(50, 50));
            tbtnCursoX.setOpaque(true);
            tbtnCursoX.setBorderPainted(true);
            tbtnCursoX.setIcon(icono);
            tbtnCursoX.setToolTipText(toolTipText);
            tbtnCursoX.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnCursoAgregadoSeleccionadoActionPerformed(evt);
                }
            });
            pnlPeriodoActual.add(tbtnCursoX);
            tbtnCursoX.setBounds(xTbtn, yTbtn, 50, 50);

            botonesPeriodoActual.add(indice, tbtnCursoX);
            dataPeriodoActual.add(indice, curso);
        } else {
            JToggleButton botonAnterior = botonesPeriodoActual.get(botonesPeriodoActual.size() - 1);
            int xTbtn = botonAnterior.getX();
            int yTbtn = botonAnterior.getY() + 53;
            btngCursos.add(tbtnCursoX);
            tbtnCursoX.setPreferredSize(new java.awt.Dimension(50, 50));
            tbtnCursoX.setIcon(icono);
            tbtnCursoX.setToolTipText(toolTipText);
            tbtnCursoX.addActionListener(new java.awt.event.ActionListener() {

                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnCursoAgregadoSeleccionadoActionPerformed(evt);
                }
            });
            pnlPeriodoActual.add(tbtnCursoX);
            tbtnCursoX.setBounds(xTbtn, yTbtn, 50, 50);

            botonesPeriodoActual.add(tbtnCursoX);
            dataPeriodoActual.add(curso);
        }
    }

    public void pintarCursosMalla() {
        Periodo[] periodos = ui.getMalla().getPeriodos();
        ArrayList<Curso> cursos;
        for (int i = 0; i < periodos.length; i++) {
            int periodo = i;
            if (!periodos[i].getCursos().isEmpty()) {
                cursos = periodos[i].getCursos();
                for (int h = 0; h < cursos.size(); h++) {
                    Curso curso = cursos.get(h);
                    pintarCursoAgregado(periodo, curso);
                }
            }
        }
    }

    public void pintarRequisitos(Curso curso) {        
        ArrayList<Curso> requisitos = curso.getRequisitos();
        ArrayList<JToggleButton> botones;
        ArrayList<ArrayList> cursos;
        
        //Primer reestablece los atributos visuales de todos los cursos/botones
        for (int i = 0; i < periodosPintados.size(); i++) {
            cursos = (ArrayList<ArrayList>) periodosPintados.get(i).get(2);
            botones = cursos.get(0);
            for (int h = 0; h < botones.size(); h++) {
                JToggleButton botonActual = botones.get(h);
                botonActual.setOpaque(true);
                botonActual.setBorderPainted(true);
                botonActual.setBackground(new java.awt.Color(240, 240, 240));                         
            }
        }
        
        //Luego pinta solo los requisitos
        if (requisitos != null) {
            for (int i = 0; i < periodosPintados.size(); i++) {
                cursos = (ArrayList<ArrayList>) periodosPintados.get(i).get(2);
                botones = cursos.get(0);
                for (int h = 0; h < botones.size(); h++) {
                    JToggleButton botonActual = botones.get(h);                       
                    for (int j = 0; j < requisitos.size(); j++) {
                        String codigoNombre = requisitos.get(j).getCodigo() + " - " + requisitos.get(j).getNombre();
                        if (botonActual.getToolTipText().equals(codigoNombre)) {
                            botonActual.setBackground(new java.awt.Color(204,0,0));
                        }
                    }
                }
            }
        }
    }

    public void cargarCmbCursos() {
        ArrayList<Curso> listaCursos = ui.getRegCursos().getListaCursos();
        cmbCursos.removeAllItems();
        for (int i = 0; i < listaCursos.size(); i++) {
            String curso = listaCursos.get(i).getCodigo() + " - " + listaCursos.get(i).getNombre();
            cmbCursos.addItem(curso);
        }
    }

    public void cargarCmbRequisitos(Curso curso) {
        ArrayList<Curso> listaRequisitos = curso.getRequisitos();
        cmbRequisitos.removeAllItems();
        if(listaRequisitos != null){
            for (int i = 0; i < listaRequisitos.size(); i++) {
                String requisito = listaRequisitos.get(i).getCodigo() + " - " + listaRequisitos.get(i).getNombre();
                cmbRequisitos.addItem(requisito);
            }
        }            
    }

    public void cargarLstRequisitos() {
        ArrayList<Curso> listaCursos = ui.getRegCursos().getListaCursos();
        DefaultListModel lstModel = new DefaultListModel();
        DefaultListModel lstModel2 = new DefaultListModel();
        lstRequisitos.setModel(lstModel);
        lstRequisitosAsignados.setModel(lstModel2);

        for (int i = 0; i < listaCursos.size(); i++) {
            String curso = listaCursos.get(i).getCodigo() + " - " + listaCursos.get(i).getNombre();
            lstModel.addElement(curso);
        }
    }

    public void cargarLstRequisitosCursoSeleccionado(Curso curso) {
        ArrayList<Curso> listaCursos = curso.getRequisitos();
        DefaultListModel lstModel = new DefaultListModel();
        lstRequisitosAsignados.setModel(lstModel);

        if (listaCursos != null) {
            for (int i = 0; i < curso.getRequisitos().size(); i++) {
                String requisito = listaCursos.get(i).getCodigo() + " - " + listaCursos.get(i).getNombre();
                lstModel.addElement(requisito);
            }
        }
    }

    public void cargarVistaCursoSeleccionado(Curso curso) {
        txtCurso.setText(curso.getCodigo() + " - " + curso.getNombre());
        txtContenido.setText(curso.getContenidoTematico());
        cargarCmbRequisitos(curso);
        txtHoras.setText(curso.getHoras()+"");
        txtCreditos.setText(curso.getCreditos()+"");
    }
    
    public void cargarResumenMalla(){
        lblMallaDatos.setText(ui.datosMalla(ui.getMalla()));
        lblMallaResumen.setText(ui.resumenMalla(ui.getMalla()));
    }

    public int periodoSeleccionado() {
        int periodoSeleccionado = -1;
        for (int i = 0; i < periodosPintados.size(); i++) {
            ArrayList<Object> periodoX = periodosPintados.get(i);
            JRadioButton rbTemp = (JRadioButton) periodoX.get(1);
            if (rbTemp.isSelected()) {
                periodoSeleccionado = i;
            }
        }
        return periodoSeleccionado;
    }
    
    public void seleccionarPeriodoDelCursoSeleccionado(int periodo) {
        ArrayList<Object> periodoX = periodosPintados.get(periodo);
        JRadioButton rbPeriodoX = (JRadioButton) periodoX.get(1);
        rbPeriodoX.setSelected(true);
    }

    public Curso deStringACurso(String codigoNombre) {
        String codigo = codigoNombre.split(" - ")[0];
        String nombre = codigoNombre.split(" - ")[1];
        Curso curso = ui.buscarCurso(codigo, nombre);
        return curso;
    }

    public void repintar() {
        limpiar();
        pnlCursos.removeAll();
        pintarPeriodos();
        pintarCursosMalla();
        cargarCmbCursos();
        cargarLstRequisitos();
        interfaz();
    }

    public boolean esRequisito(Curso curso) {
        Periodo[] periodos = ui.getMalla().getPeriodos();
        ArrayList<Curso> cursos;
        ArrayList<Curso> requisitos;
        for (int i = 0; i < periodos.length; i++) {
            if (!periodos[i].getCursos().isEmpty()) {
                cursos = periodos[i].getCursos();
                for (int j = 0; j < cursos.size(); j++) {
                    requisitos = cursos.get(j).getRequisitos();
                    if (requisitos != null
                            && requisitos.contains(curso)) {
                        return true;
                    }
                }
            }
        }
        return false;
    }
}
